name: Haskell CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v19
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://cache.nixos.org/

      - name: Check Cachix token exists
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        run: |
          if [[ -z "$CACHIX_AUTH_TOKEN" ]]; then
              echo "Must provide CACHIX_AUTH_TOKEN in environment" 1>&2
              exit 1
          fi

      # - name: Setup cachix cache
      #   uses: cachix/cachix-action@v12
      #   with:
      #     name: myopia
      #     authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      #     skipPush: true # push isn't supported for flake based setups: https://github.com/cachix/cachix-action/issues/47

      - name: Setup generic cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}

      - name: Check nix environment
        run: |
          set -x

          nix flake check
          nix run .#check-formatting

      - name: Check Haskell formatting
        run: |
          set -x
          nix develop -c fourmolu --mode check $(find -type f -name "*.hs" -not -path "*/dist-newstyle/*")

      - name: Install dependencies and build artefacts
        run: |
          nix develop -c cabal update
          nix develop -c cabal build --enable-tests

      - name: Run tests
        run: nix develop -c cabal test

      - uses: actions/cache/save@v3
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}
